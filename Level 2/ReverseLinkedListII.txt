/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int m, int n) {
        
        ListNode newHead(0);
        newHead.next = head;
        
        ListNode *pre = &newHead;
        ListNode* cur = head;
        ListNode* next = NULL;
        
        int i = 1;
        while(i < n)
            
        {
            if(i++ < m) 
            {
                pre = cur; 
                cur = cur->next;
            }

            else
            { 
                next = cur->next; 
                cur->next = cur->next->next; 
                next->next = pre->next; 
                pre->next = next; 
            }
        }
        
        return newHead.next;
        
    }
};